▪︎리눅스(Linux)

- 유닉스(Unix)를 기반으로 개발된 오퍼레이팅 시스템
- 리눅스의 역사는 리처드 스톨만의 GUN 프로젝트와 함께 시작된다.

▫︎  특징
- 유닉스 기반
리눅스 커널 자체가 유닉스의 미닉스(Minix)를 참고하여 개발 되었다. 기존의 유닉스는 높은 하드웨어 스펙을 기반으로 복잡하고 큰 네트워크 시스템을 위해서 만들어진 운영체제였다. 하지만 리눅스는 여기에서 커널과 명령어 체계를 바꾸어서 일반인들이 보다 사용하기 쉽게 하였다. 그리고 유닉스를 기반으로 하기 때문에 개발자들에게도 익숙한 환경이였고 결국 많은 사람들에게 빠르게 확산될 수 있었다.
    
- 다중 사용자와 멀티 태스킹을 지원
리눅스는 다중 사용자와 멀티 태스킹을 지원한다. 때문에 보안성이 높은 파일을 관리하기 용이하여 서버에서 많이 쓰이고 있다.
    
- 자유 소프트웨어
리눅스는 자유 소프트웨어 라이센스를 갖는다. 이 말은 누구나 소스 코드를 이용하고 수정해서 재배포 할 수 있다는 것이며, 이것이 곧 다른 운영체제와 가장 큰 차이점이다. 그리고 이러한 리눅스 커널과 소프트웨어 등을 모아서 패키지 관리 프로그램으로 구성한 것을 리눅스 배포판이라고 한다. 수 많은 리눅스 배포판들은 서로 다른 목적과 환경에서 저마다 다른 옷을 걸쳤지만, 리눅스 커널이라는 하나의 심장을 공유하고 있다.
    
▪︎ 우분투(Ubuntu)

- Ubuntu는 Debian GNU/리눅스에 기반한 운영체제이다.
- 우분투는 데비안(Debian) GNU/리눅스를 기반으로 만들어졌으며 고유한 데스크탑 환경을 사용하는 리눅스 배포판이다.
- 우분투는 리눅스의 여러 배포판중에 하나인 데비안에서 또 한 번 파생된 배포판이다.

▫︎  특징

- 개인용, 데스크탑 환경에 최적화
대부분의 리눅스 배포판들이 서버용으로 사용되고 있는것에 반하여, 우분투는 개인 사용자와 데스크탑 환경에 최적화 되도록 사용자 편의를 중점으로 개발되고 있다.
    
- 자유 소프트웨어에 기반
리눅스의 특징을 그대로 물려 받으며 자유 소프트웨어에 기반하기 때문에 누구나 무료로 다운 받아서 사용할 수 있다.
    
▪︎ 데비안(debian)
- 커뮤니티 데비안 프로젝트에서 개발하고 있는 리눅스 배포판이다.

▫︎  특징
- 적극적인 비자유 소프트웨어 배제
데비안은 메이저 GUN/리눅스 배포판 중 거의 유일하게 비자유 소프트웨어를 적극적으로 배제하는 배포판이다. 
 → 의도치 않게 혹은 다른 목적의 달성을 위해 비자유 소프트웨어를 포함하지 않은 것이 아닌 의도적으로 비자유 소프트웨어를 포함하지 않았음을 의미한다. 
    
- 긴 업데이트 주기
기업이나 재단 등 일정한 주체가 있는 게 아닌 자발적인 커뮤니티에서 만드는 배포판이라 프로그램의 업데이트가 늦다.
    
- 쉬운 유지보수
데비안은 프로그램들을 deb란 패키지로 묶어서 관리하고 있는데 이 방식의 장점은 deb 파일 안에 의존성 관련 정보를 저장하고 있어 필요한 외부 프로그램이나 라이브러리를 쉽게 알 수 있고 패키지 관리 도구와 연계하여 패키지에서 필요로 하는 의존 패키지를 자동으로 데비안에서 운영하는 외부 저장소에서 가져와 설치할 수 있기 때문에 다른 배포판에 비해 관리가 편하다.
    

▫︎  데비안 조직
- 데비안은 자유 소프트웨어를 개발하고 자유 소프트웨어 커뮤니티의 이상을 널리 알리는 일을 위해 조직한, 자원자로만 구성된 조직이다.

- 데비안 프로젝트는 1993년에 이안 머독이 새로운 (당시에는 비교적 새로운 버전의) 커널을 사용하면서, 완전하고 일관된 소프트웨어 배포판을 만드는 데 참여할 소프트웨어 개발자를 공개적으로 모집하면서부터 시작되었다.

- 데비안 개발자는 [홈페이지](https://www.debian.org/) 및 [FTP](http://ftp.debian.org/) 사이트 관리, 그래픽 디자인, 소프트웨어 라이선스의 법률적 해석, 문서 작성, (말할 필요도 없이) 소프트웨어 패키지 관리 등 다양한 활동에 참여한다.

▪︎ 커널(Kernel)
- **커널**은 운영체제 중 항상 메모리에 올라가 있는 **운영체제의 핵심 부분**으로써 하드웨어와 응용 프로그램 사이에서 **인터페이스를 제공하는 역할**을 하며 **컴퓨터 자원들을 관리하는 역할**을 한다.

- 커널은 인터페이스로써 응용 프로그램 수행에 필요한 여러가지 서비스를 제공하고, 여러가지 하드웨어(CPU, 메모리) 등의 리소스를 관리하는 역할을 한다.

▫︎  커널 역할
- 테스크 관리자: CPU를 task라는 추상적인 자원으로써 제공
- 메모리 관리자: 메모리를 segment나 page로 제공
- 파일 시스템: 디스크를 파일로 제공
- 네트워크 관리자: 네트워크 장치를 소켓으로 제공
- 디바이스 드라이버 관리자: 각종 장치를 디바이스 드라이버를 통해 일관되게 접근하도록 함

▪︎ 쉘(shell)
- 리눅스 커널과 사용자를 연결해주는 인터페이스

- 사용자가 입력하는 명령을 읽어 해석하고 프로그램을 실행시키는 인터페이스

▫︎  쉘의 기능
- 명령어 해석기 기능: 사용자와 커널 사이에서 명령을 해석하여 전달한다. (대화식 사용)

- 프로그래밍 기능: 일련의 명령어와 쉘 자체로 프로그램을 만들 수 있다 (Shell Script).

- 사용자 환경설정 기능: 리눅스의 세션 변수들을 정의하여 사용자가 리눅스 환경을 설정할 수 있다.
