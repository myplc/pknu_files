- NumPy, Pandas,Matplotlib
NumPy는 Numerical Python의 약자로,  Numeric 및 Numarray라는 두 개의 이전 패키지를 기반으로, 다차원 배열 객체와 함께 작동하는 능력
NumPy는 수치 분석 및 시뮬레이션에서 뛰어나지만, 데이터 분석과 조작, 다양한 데이터 원본과의 작업에는 Pandas가 빛을 발함
Pandas는 데이터 작업을 간소화하기 위해 데이터 로딩, 재구성, 피벗, 병합 및 조인을 위한 메서드 제공. 또한, 누락된 데이터 처리를 위한 도구도 제공. Pandas는 테이블 형식의 데이터 작업에 능숙하며, 데이터 분석 작업에 많이 사용되는 선택적인 도구
NumPy의 핵심 기능은 다차원 배열 객체를 중심으로 돌아감. 이 배열은 동질적으로, 즉 모든 요소가 동일한 유형(일반적으로 정수 또는 부동 소수점 숫자)임을 의미. 이는 큰 데이터셋에서 수학 연산이 필요한 작업에 특히 유용.
예를 들어, 시뮬레이션이나 수치 분석을 포함하는 프로젝트를 작업 중이라면, NumPy의 효율적인 다차원 배열과 수학 함수는 극도로 유용할 수 있습니다. 또한, C/C++ 또는 Fortran 코드와 통합이 필요한 프로젝트에 대해서도 NumPy는 원활하고 빠른 상호 운용성을 제공하므로 훌륭한 선택입니다.
반면에 Pandas는 복잡한 데이터 구조와 데이터 조작을 위해 설계되었습니다. 두 가지 주요 데이터 구조인 Series와 DataFrame을 제공합니다. Series는 모든 데이터 유형을 보유할 수 있는 일차원 배열과 유사한 객체이며, DataFrame은 열이 서로 다른 유형일 수 있는 이차원 레이블 데이터 구조입니다.
Pandas는 데이터의 가공 및 준비 과정에서 빛을 발합니다. 데이터 재구성, 슬라이싱, 필터링, 집계 등의 다양한 기능을 제공합니다. 또한, 시계열 데이터를 처리하는 데에도 탁월한 도구입니다. 데이터 분석, 데이터 정리 또는 데이터 시각화와 관련된 프로젝트라면, Pandas가 적합한 도구일 것입니다
Matplotlib은 Python에서 데이터를 시각화해주는 패키지입니다. 빅데이터들을 분석 시에 한 눈에 파악하기가 어려울 때 시각화하여 직관적으로 이해하여 분석에 활용할 수 있습니다.
- GUI: 그래픽을 이용해 사용자와 소통, 마우스로 화면에 나오는 그림을 쓸어다놓거나 클릭해서 컴퓨터와 소통, 윈도우즈가 대표적, CLI보다누구든 쉽게 접근 가능
VS
CLI: 글자의 입출력을 통해 사용자와 컴퓨터 간 소통, 윈도우즈의 cmd창이 대표적인 예시, 콘솔 프로그램도 CLI형태로 되어있음